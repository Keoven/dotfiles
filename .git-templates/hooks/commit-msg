#!/usr/bin/env python

import re
import subprocess
import sys

# Regex pattern for gitbranch name.
pattern = r"^(.*)/(?P<ticket>\d+)-.+"
branchname = subprocess.check_output(
    ['/usr/bin/git', 'rev-parse', '--abbrev-ref', 'HEAD'])

try:
    template = subprocess.check_output(
        ['/usr/bin/git', 'config', '--get', 'commit.template']).strip()

    with open(template) as f:
        template = f.read()
except Exception:
    template = None


def get_story():
    match = re.match(pattern, branchname)
    if not match:
        return None
    else:
        return match.group('ticket')


def append_commit_details(story):
    """Prepend the commit message with story ID"""
    msgfile = sys.argv[1]

    with open(msgfile) as f:
        contents = f.read()

    if ((template and (template in contents)) or
       re.sub(r'#.*', '', contents).strip() == ''):
        return

    with open(msgfile, 'w') as f:
        f.write(contents)

        if 'Related Github issues' not in contents:
            f.write('\nRelated Github issues\n')
            if story:
                f.write('[#' + str(story) + ']')
            else:
                f.write('None')
            f.write('\n')

        if 'Working branch' not in contents:
            f.write('\nWorking branch\n')
            f.write(branchname)


def main():
    try:
        story = get_story()
        append_commit_details(story)
    except Exception:
        sys.exit(0)


if __name__ == '__main__':
    main()
